/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PortPicker;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import Connections.DBConnection;
import Sales.MainMenu;
import java.util.stream.Collectors;
import javax.swing.JComponent;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author cmeehan
 */
public class NQTSHP1Picker extends javax.swing.JFrame {

    
    private final Connection CONN = new DBConnection().connect();
    private ArrayList<String> ports = new ArrayList<>();
    private Map<String, Map<String, String>> fullPort = new HashMap<>();
    
    /**
     * Creates new form NQPOLPicker
     */
    public NQTSHP1Picker() {
        initComponents();
        styleTable();
        setLocationRelativeTo(this);
    }

     private void styleTable() {
        ((JComponent) portsTable.getDefaultRenderer(Boolean.class)).setOpaque(true);
        String[] headers = {"", "UNLOC", "Port Name", "Country"};
        TableColumnModel tcm = portsTable.getColumnModel();
        // Set column header names
        tcm.getColumn(0).setHeaderValue("");
        tcm.getColumn(1).setHeaderValue("UNLOC");
        tcm.getColumn(2).setHeaderValue("Port Name");
        tcm.getColumn(3).setHeaderValue("Country");

        // Set column widths
        tcm.getColumn(0).setPreferredWidth(JTable.AUTO_RESIZE_ALL_COLUMNS);

        // Set model to portsTable
        portsTable.setColumnModel(tcm);

        // Sort by UNLOC column
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(portsTable.getModel());
        portsTable.setRowSorter(sorter);
        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<>();
        int columnIndexToSort = 1;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.ASCENDING));

        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("kline?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        portScopeQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM PortScope p");
        portScopeList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : portScopeQuery.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        portsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, portScopeList, portsTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${portSelected}"));
        columnBinding.setColumnName("Port Selected");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${portUnloc}"));
        columnBinding.setColumnName("Port Unloc");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${portName}"));
        columnBinding.setColumnName("Port Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${portCountry}"));
        columnBinding.setColumnName("Port Country");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        portsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                portsTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(portsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void portsTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_portsTableMouseReleased
        int colClicked = portsTable.columnAtPoint(evt.getPoint());
        addRemovePorts(colClicked);
    }//GEN-LAST:event_portsTableMouseReleased

    private void addRemovePorts(int col) {
        int selectedRow = portsTable.getSelectedRow();
        Boolean rowSelected = (Boolean) portsTable.getValueAt(selectedRow, 0);
        if (rowSelected) {
            if (col == 0) {
                ports.add(String.valueOf(portsTable.getValueAt(selectedRow, 2)));
                String unLocCode = String.valueOf(portsTable.getValueAt(selectedRow, 1));
                String portName = String.valueOf(portsTable.getValueAt(selectedRow, 2));
                String portCountry = String.valueOf(portsTable.getValueAt(selectedRow, 3));
                fullPort.put(unLocCode, new HashMap() {
                    {
                        put(portName, portCountry);
                    }
                });
                fullPort.entrySet().stream().forEach((k) -> {
                    k.getValue().entrySet().stream().forEach((v) -> {
                        //System.out.println(k.getKey().concat(" ").concat(v.getKey()).concat(" ").concat(v.getValue()));
                    });
                });
                String s = ports.stream().map(i -> (i)).collect(Collectors.joining(", "));
                MainMenu.tshp1TextField.setText(s);
            }
        } else {
            ports.remove(String.valueOf(portsTable.getValueAt(selectedRow, 2)));
            String unLocCode = String.valueOf(portsTable.getValueAt(selectedRow, 1));
            String portName = String.valueOf(portsTable.getValueAt(selectedRow, 2));
            String portCountry = String.valueOf(portsTable.getValueAt(selectedRow, 3));
            fullPort.remove(unLocCode, new HashMap() {{put(portName, portCountry);}});
            String s = ports.stream().map(i -> (i)).collect(Collectors.joining(", "));
            MainMenu.tshp1TextField.setText(s);
        }

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NQTSHP1Picker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NQTSHP1Picker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NQTSHP1Picker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NQTSHP1Picker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NQTSHP1Picker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JScrollPane jScrollPane1;
    private java.util.List<PortPicker.PortScope> portScopeList;
    private javax.persistence.Query portScopeQuery;
    private javax.swing.JTable portsTable;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
